---
import { Image } from "astro:assets";
import { getLocalizedSettings } from "@/lib/localization-helpers";
import { translatePath, unlocalizedUrl } from "@/lib/localization-helpers";
import { defaultLocale, locales } from "site";

const currentLocale = Astro.currentLocale;

function getTranslatedUrl(locale: string): string {
	const unlocalizedPath = unlocalizedUrl(Astro.url.pathname);
	return translatePath(locale, unlocalizedPath);
}

function isActiveLocale(locale: string): boolean {
	return locale === currentLocale;
}

const { header, contacts } = getLocalizedSettings(currentLocale);

const logoPath = header.logo?.imagePath;

const images = import.meta.glob<{ default: ImageMetadata }>(
	"/src/assets/global/**/*.{webp,jpeg,jpg,png,gif,svg}",
);
---

<style>
	.menu-icon {
		position: relative;
		width: 50px;
		height: 50px;
		cursor: pointer;
	}
	.menu-icon .menu-icon__checkbox {
		display: block;
		width: 100%;
		height: 100%;
		position: relative;
		cursor: pointer;
		z-index: 2;
		-webkit-touch-callout: none;
		position: absolute;
		opacity: 0;
	}
	.menu-icon div {
		margin: auto;
		position: absolute;
		top: 0;
		right: 0;
		left: 0;
		bottom: 0;
		width: 22px;
		height: 12px;
	}
	.menu-icon span {
		position: absolute;
		display: block;
		width: 100%;
		height: 2px;
		background-color: var(--bar-bg, #000);
		border-radius: 5rem;
		transition: all 0.2s cubic-bezier(0.1, 0.82, 0.76, 0.965);
	}
	.menu-icon span:first-of-type {
		top: 0;
	}
	.menu-icon span:last-of-type {
		bottom: 0;
	}
	.menu-icon.active span:first-of-type,
	.menu-icon .menu-icon__checkbox:checked + div span:first-of-type {
		transform: rotate(45deg);
		top: 5px;
	}
	.menu-icon.active span:last-of-type,
	.menu-icon .menu-icon__checkbox:checked + div span:last-of-type {
		transform: rotate(-45deg);
		bottom: 5px;
	}
	.menu-icon.active:hover span:first-of-type,
	.menu-icon.active:hover span:last-of-type,
	.menu-icon:hover .menu-icon__checkbox:checked + div span:first-of-type,
	.menu-icon:hover .menu-icon__checkbox:checked + div span:last-of-type {
		width: 22px;
	}
	@media (min-width: 1024px) {
		.menu-icon:hover span:first-of-type {
			width: 26px;
		}
		.menu-icon:hover span:last-of-type {
			width: 12px;
		}
	}
	#navigation {
		pointer-events: none;
	}
	[data-nav-border-reveal] {
		--tw-border-opacity: 0;
	}
	.active-locale {
		font-weight: bolder;
	}
</style>

<style is:global>
	[data-nav-text-reveal] {
		opacity: 0;
	}
	[data-nav-text-reveal] > div {
		position: relative;
		margin: 0;
	}
	.split-parent {
		overflow: hidden;
	}
	.split-child {
		display: inline-block;
	}
</style>

<header class="fixed w-full z-30">
	<div
		class="items-center auto-cols-fr grid-cols-2 lg:grid-cols-2 grid-rows-[auto] justify-between left-0 py-3.5 px-6 lg:px-20 right-0 top-0 grid gap-4"
	>
		<div
			class="items-center flex-wrap justify-start relative flex text-blue-700 z-20"
		>
			<a
				href={translatePath(currentLocale ?? defaultLocale, "/")}
				id="header-logo"
				class="text-blue-700 justify-self-start lg:justify-self-center underline inline-block max-w-full"
			>
				<svg
					version="1.1"
					id="CompanyLogo"
					xmlns="http://www.w3.org/2000/svg"
					xmlns:xlink="http://www.w3.org/1999/xlink"
					x="0px"
					y="0px"
					viewBox="0 0 300 300"
					width={40}
					height={40}
					class="w-8 h-8 lg:w-10 lg:h-10"
					xml:space="preserve"
				>
					<style type="text/css">
						.st0 {
							clip-path: url(#PathR_00000030484139693231530050000007202149904154527160_);
							fill: none;
							stroke: #000000;
							stroke-width: 28;
							stroke-miterlimit: 10;
						}

						.st1 {
							clip-path: url(#PathL_00000111906239159643029990000008763162307303549323_);
							fill: none;
							stroke: #000000;
							stroke-width: 28;
							stroke-miterlimit: 10;
						}
					</style>
					<g>
						<defs>
							<path
								id="PathR"
								d="M286.4,71.8V233c0,3-0.2,6-0.8,8.9c-2.9,16.3-30.6,53.1-61.2,53.4c0,0-40,1.6-60.4-26.3
			c-0.3-0.5-0.3-1.1,0.1-1.5l12.7-12.7c0.5-0.5,1.2-0.4,1.6,0c2.7,2.9,16.5,21.7,40.9,20.2c33.6-2,45.2-34.9,45.2-43.8
			c0,0,0.8-172.4,0.1-175.2c-10-42-63.4-38.8-84.5-14.7l-59.6,60.1c-3,3-4.6,7.1-4.6,11.3c-0.1,1-0.2,2.1-0.2,3.1l-2.6,57.8
			c0,2.6,0.7,5,2.1,7.2c2.1,3.3,20.2,29.4,19.7,29.9c-3.8,3.8-8.5,8.5-12.2,12.2c-0.4,0.4-1.1,0.5-1.5,0.1
			c-3.6-3-15.9-18.9-25.6-38.4c-2.2-4.4-1.5-4.7-1.5-10.1l0.8-59c-0.8-19.3,3.4-22.9,15.9-35.6l51.1-51
			C178,16.3,183.5,1.1,234.8,5.8c22.2,2.1,38.7,17.3,47.5,32.4c2.7,4.7,4.1,10.1,4.1,15.5C286.4,60,286.4,67.3,286.4,71.8z"
							></path>
						</defs>
						<clipPath
							id="PathR_00000047739257205995265260000000317677073555739302_"
						>
							<use xlink:href="#PathR" style="overflow:visible;"
							></use>
						</clipPath>

						<path
							id="MaskR"
							style="clip-path:url(#PathR_00000047739257205995265260000000317677073555739302_);fill:none;stroke:#000000;stroke-width:28;stroke-miterlimit:10;"
							class="logo-path-mask"
							d="
		M132,218.3l-27-38.3v-77.1c0,0,50.7-57.2,60.4-67.4c9.7-10.2,42.1-22.5,52.3-23.4s31.3,5.1,38.3,12.1s17.9,1.1,20.6,42.7
		s0,163.9,0,163.9s-3.9,24.8-15.2,34.5c-11.3,9.7-22.7,20.3-33.4,19.8s-25.9-3.7-31.3-5.3c-5.4-1.6-28.6-22.1-28.6-22.1"
						></path>
					</g>
					<g>
						<defs>
							<path
								id="PathL"
								d="M13.6,228.2V67c0-3,0.2-6,0.8-8.9C17.2,41.7,45,5,75.6,4.7c0,0,40-1.6,60.4,26.3c0.3,0.5,0.3,1.1-0.1,1.5
			l-12.7,12.7c-0.5,0.5-1.2,0.4-1.6,0c-2.9-2.8-16.6-21.7-41-20.2C47,27,35.4,59.8,35.4,68.7c0,0-0.8,172.4-0.1,175.2
			c10,42,63.4,38.8,84.5,14.7l59.6-60.1c3-3,4.6-7.1,4.6-11.3c0.1-1,0.2-2.1,0.2-3.1l2.6-57.8c0-2.6-0.7-5-2.1-7.2
			c-2.1-3.3-20.2-29.4-19.7-29.9c3.8-3.8,8.5-8.5,12.2-12.2c0.4-0.4,1.1-0.5,1.5-0.1c3.6,3,15.9,18.9,25.6,38.4
			c2.2,4.4,1.5,4.7,1.5,10.1l-0.8,59c0.8,19.3-3.4,22.9-15.9,35.6L138,271c-15.9,12.6-21.5,27.9-72.8,23.1
			C43,292,26.5,276.8,17.7,261.7c-2.7-4.7-4.1-10.1-4.1-15.5C13.6,240,13.6,232.7,13.6,228.2z"
							></path>
						</defs>
						<clipPath
							id="PathL_00000141443442153955986570000000888460909890178439_"
						>
							<use xlink:href="#PathL" style="overflow:visible;"
							></use>
						</clipPath>

						<path
							id="MaskL"
							style="clip-path:url(#PathL_00000141443442153955986570000000888460909890178439_);fill:none;stroke:#000000;stroke-width:28;stroke-miterlimit:10;"
							class="logo-path-mask"
							d="
		M132,42c0,0-16.7-31.9-52.3-29.8S24.2,58.7,24.2,58.7v192c0,0,12.4,25.9,28.6,31.3c16.2,5.4,45.8,2.7,53.9,0s65.3-58.8,65.3-58.8
		l21.6-22.7l3.2-78.7L171,78.7"
						></path>
					</g>
				</svg>
			</a>
		</div>
		<div
			class="col-start-2 hidden lg:flex justify-center items-center h-full"
		>
			<a
				data-company-name
				class="pb-4 group"
				href={translatePath(currentLocale ?? defaultLocale, "/")}
			>
				<div
					class="w-20 h-1 bg-slate-200 rounded-full group-hover:bg-slate-600 transition-colors duration-500"
				>
				</div>
			</a>
		</div>
		<div class="justify-self-end col-span-1 row-span-1 z-40 col-start-3">
			<div
				class="items-center justify-center relative flex h-16 lg:w-24 lg:h-24"
			>
				<div class="menu-icon">
					<input
						id="menu-toggle"
						class="menu-icon__checkbox"
						type="checkbox"
					/>
					<div>
						<span></span>
						<span></span>
					</div>
				</div>
			</div>
		</div>
	</div>
	<nav
		id="navigation"
		class="items-center bottom-0 text-sm font-medium justify-center left-0 fixed right-0 top-0 flex h-screen z-30"
	>
		<div
			id="navigation-background"
			class="bg-white w-full h-full absolute top-0 left-0 opacity-0"
		>
		</div>
		<div
			class="items-center font-semibold flex-wrap justify-center flex flex-col overflow-hidden z-20 w-full"
		>
			<div class="flex flex-col items-start md:items-center pt-10">
				{
					header.pages.map((page, index) => (
						<a
							data-nav-item
							href={translatePath(
								currentLocale ?? defaultLocale,
								page.link,
							)}
							class="items-center justify-start flex overflow-hidden gap-4 relative pr-10"
						>
							<div
								data-nav-border-reveal
								data-nav-text-reveal
								class="text-black items-center cursor-pointer justify-center pt-1 flex w-9 h-9 border-2 border-black border-solid rounded-full"
							>
								0{index + 1}
							</div>
							<div
								data-nav-text-reveal
								class="cursor-pointer overflow-hidden text-4xl xs:text-5xl md:text-[5.63rem] !leading-[1.15] text-black"
							>
								{page.title}
							</div>
						</a>
					))
				}
				<div class="flex gap-8 pt-10 pl-16 md:pl-0">
					{
						locales.map((locale) => (
							<a
								href={getTranslatedUrl(locale)}
								class:list={[
									"items-center justify-start flex overflow-hidden gap-4 relative cursor-pointer",
									isActiveLocale(locale) && "active-locale",
								]}
							>
								<span
									data-nav-text-reveal
									class="overflow-hidden text-md xs:text-lg md:text-xl !leading-[1.15] text-black"
								>
									<span>{locale}</span>
								</span>
							</a>
						))
					}
				</div>
			</div>
		</div>
	</nav>
</header>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	// Uncomment if you have premium version of gsap
	// import { SplitText } from "gsap/SplitText";
	// import { DrawSVGPlugin } from "gsap/DrawSVGPlugin";
	import { BlurPlugin } from "@/utils/gsap-blur";
	import { LifecycleManager } from "@/utils/lifecycle-manager";

	gsap.registerPlugin(
		ScrollTrigger,
		/*SplitText, DrawSVGPlugin,*/
		BlurPlugin,
	);

	const lm = new LifecycleManager();

	lm.onElementLoaded("navigation", (ctx) => {
		ctx?.add(() => {
			gsap.timeline({
				defaults: {
					ease: "power1.inOut",
					stagger: 0.2,
				},
				scrollTrigger: {
					trigger: "body",
					start: "50px",
					toggleActions: "play none none reverse",
				},
			})
				.to("[data-company-name]", { opacity: 0 })
				// .to("header .logo-path-mask", { drawSVG: 0 }, "<")
				.to("header .logo-path-mask", { opacity: 0 }, "<")
				.set("#header-logo", { pointerEvents: "none" });

			const tl = gsap.timeline({
				paused: true,
				defaults: {
					duration: 1,
					ease: "power3.out",
				},
			});

			// const childSplit = new SplitText("[data-nav-text-reveal]", {
			// 	type: "lines",
			// 	linesClass: "split-child",
			// });
			// const parentSplit = new SplitText("[data-nav-text-reveal]", {
			// 	// type: "lines",
			// 	linesClass: "split-parent",
			// });

			tl.set("#navigation", { pointerEvents: "auto" })
				.to("#navigation-background", { opacity: 1 }, "<")
				.to(
					"[data-nav-text-reveal]",
					{ opacity: 1, duration: 0.5, ease: "none" },
					"<=0.5",
				);
			// .from(
			// 	childSplit.lines,
			// 	{
			// 		duration: 1,
			// 		yPercent: 300,
			// 		skewY: 7,
			// 		stagger: 0.02,
			// 	},
			// 	"<",
			// );

			const menuItems = gsap.utils.toArray(
				"[data-nav-item]",
			) as HTMLElement[];

			menuItems.forEach((menuItem) => {
				const menuItemTl = gsap
					.timeline({
						defaults: { duration: 0.4, ease: "none" },
						paused: true,
					})
					.to(menuItem, {
						blur: 2,
					})
					.to(menuItem, {
						blur: 1,
					});
				menuItem.addEventListener("mouseenter", (e) =>
					menuItemTl.play(),
				);
				menuItem.addEventListener("mouseleave", (e) =>
					menuItemTl.pause(0),
				);
			});

			// Get the checkbox
			const menuToggle = document.getElementById("menu-toggle");

			// Add an event listener to the checkbox
			menuToggle?.addEventListener("change", function () {
				if ((this as HTMLInputElement).checked) {
					tl.play();
				} else {
					tl.reverse();
				}
			});
		});
	});
</script>
